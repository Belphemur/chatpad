name: ci-docker
env:
  REGISTRY: ghcr.io
on:
  push:
    branches:
      - "main"

  workflow_dispatch:

jobs:
  docker-build-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - package: "chatpad"
            image: ${{ github.repository }}
            context: "."
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install
      - run: pnpm run build
      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      
      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ matrix.image }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image ${{ matrix.image }}
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: ${{ matrix.context }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
